<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>js继承</title>
      <link href="/2022/04/20/js-ji-cheng/"/>
      <url>/2022/04/20/js-ji-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="js继承"><a href="#js继承" class="headerlink" title="js继承"></a>js继承</h1><h5 id="继承可以使子类具有父类的各种方法和属性"><a href="#继承可以使子类具有父类的各种方法和属性" class="headerlink" title="继承可以使子类具有父类的各种方法和属性"></a>继承可以使子类具有父类的各种方法和属性</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//父类</span><br><span class="line">function Father(){</span><br><span class="line">this.name =  "tom";</span><br><span class="line">this.arr = [1,2]</span><br><span class="line">thi.say = function(){</span><br><span class="line">console.log("say");</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">Father.prototype.eat = function(){</span><br><span class="line">console.log("eat")</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="原型链继承"><a href="#原型链继承" class="headerlink" title="原型链继承"></a>原型链继承</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function father(){</span><br><span class="line">this.name = name || tom;</span><br><span class="line">thi.say = function(){</span><br><span class="line">console.log("say");</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">function child(){</span><br><span class="line">this.age  = “18”</span><br><span class="line">}</span><br><span class="line">//父类的实例作为子类的原型</span><br><span class="line">child.prototype = new father();</span><br><span class="line">let c1 = new Child();</span><br><span class="line">let c2 = new Child();</span><br><span class="line">c1.push(3);</span><br><span class="line">实例化原型对象的属性是引用类型时，会公用一个内存空间(数据污染)</span><br></pre></td></tr></tbody></table></figure><h3 id="构造函数继承"><a href="#构造函数继承" class="headerlink" title="构造函数继承"></a>构造函数继承</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 利用call改变this指向</span><br><span class="line">function Child(){</span><br><span class="line">Father.call(this);</span><br><span class="line">this.age = "18";</span><br><span class="line">}</span><br><span class="line">let c1 = new Child();</span><br><span class="line">c1只能继承Father本身的属性和方法 不能继承Father原型对象上的属性和方法</span><br></pre></td></tr></tbody></table></figure><h3 id="组合继承"><a href="#组合继承" class="headerlink" title="组合继承"></a>组合继承</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//结合原型链继承和构造函数继承</span><br><span class="line">Child.prototype = new Father()</span><br><span class="line">function Child(){</span><br><span class="line">Father.call(this);</span><br><span class="line">this.age = "18"</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> -JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/26/hello-world/"/>
      <url>/2021/10/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
